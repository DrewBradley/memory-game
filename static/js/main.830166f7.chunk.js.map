{"version":3,"sources":["components/Card.js","components/Header.js","components/Winner.js","data/card-data.js","components/Board.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","rotation","flipped","className","style","transform","onClick","pickCard","symbol","Header","shuffle","clicks","count","Winner","cardsData","id","Board","shuffleDeck","setState","deck","sort","Math","random","match","state","findMatch","card1","card2","length","itsAMatch","resetCards","showWin","setTimeout","cards","this","cardsInPlay","map","card","find","flipCard","matchCard","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.830166f7.chunk.js","sourcesContent":["import React from 'react';\nimport './Card.css'\n\nconst Card = (props) =>{\n  const rotation = props.flipped ? 180 : 0;\n  return (\n    <article \n      className=\"card\" \n      style={{transform: `rotateY(${rotation}deg)`}} \n      onClick={() => props.pickCard(props)}>\n      <div className=\"card-front\"></div>\n      <div className=\"card-back\">\n        <p className=\"card-symbol\">{props.symbol}</p>\n      </div>\n    </article>\n  )\n}\n\nexport default Card","import React from 'react';\n\nconst Header = (props) => {\n  return (\n    <header>\n      <h1>Memory!</h1>\n      <button onClick={props.shuffle}>New Game</button>\n      <p className=\"match-title\">{props.clicks} clicks!</p>\n      <p className=\"match-title\">{props.count} Matches!!!</p>\n    </header>\n  )\n}\n\nexport default Header\n","import React from 'react'\n\nconst Winner = () =>{\n  return (\n    <div className=\"winner\">\n      <h1 className=\"winner-title\">YOU WIN!</h1>\n      <p>🥳 🎉 🥳 🎉 🥳</p>\n    </div>\n  );\n}\n\nexport default Winner;","const cardsData = [\n  {id: 1,\n  symbol: \"❤️\",\n  flipped: false},\n  {id: 2,\n  symbol: \"❤️\",\n  flipped: false},\n  {id: 3,\n  symbol: \"♦️\",\n  flipped: false},\n  {id: 4,\n  symbol: \"♦️\",\n  flipped: false},\n  {id: 5,\n  symbol: \"♣️\",\n  flipped: false},\n  {id: 6,\n  symbol: \"♣️\",\n  flipped: false},\n  {id: 7,\n  symbol: \"♠️\",\n  flipped: false},\n  {id: 8,\n  symbol: \"♠️\",\n  flipped: false},\n  {id: 9,\n  symbol: \"🔴\",\n  flipped: false},\n  {id: 10,\n  symbol: \"🔴\",\n  flipped: false},\n  {id: 11,\n  symbol: \"🟪\",\n  flipped: false},\n  {id: 12,\n  symbol: \"🟪\",\n  flipped: false},\n  {id: 13,\n  symbol: \"☂︎\",\n  flipped: false},\n  {id: 14,\n  symbol: \"☂︎\",\n  flipped: false},\n  {id: 15,\n  symbol: \"★\",\n  flipped: false},\n  {id: 16,\n  symbol: \"★\",\n  flipped: false},\n]\n\nexport default cardsData","import React, { Component } from 'react';\nimport './Board.css'\nimport Card from './Card'\nimport Header from './Header'\nimport Winner from './Winner'\nimport cardsData from '../data/card-data'\n\nclass Board extends Component {\n  constructor() {\n    super()\n    this.state = {\n      cards: cardsData.sort(() => Math.random() - 0.5),\n      flipped: [],\n      clicks: 0,\n      match: []\n    }\n  }\n\n  shuffleDeck = () => {\n    this.setState({\n      deck: cardsData.sort(() => Math.random() - 0.5),\n      flipped: [],\n      clicks: 0,\n      match: []\n    })\n  }\n\n  pickCard = ({ id, symbol }) => {\n    this.setState({flipped: [...this.state.flipped, {'symbol': symbol, 'id': id, 'flipped': true}], clicks: this.state.clicks + 1})\n  }\n\n  componentDidUpdate() {\n    this.findMatch()\n  }\n\n  findMatch = () => {\n    const card1 = this.state.flipped[0]\n    const card2 = this.state.flipped[1]\n    if(this.state.flipped.length > 1) {\n      (card1.symbol === card2.symbol) && (card1.id !== card2.id) ? this.itsAMatch(card1, card2) : this.resetCards()\n    }\n    if(this.state.match.length > 15) {\n      this.showWin()\n    }\n  }\n\n  showWin = () => {\n    setTimeout(() => {\n      this.shuffleDeck()\n    }, 4000)\n  }\n\n  itsAMatch = (card1, card2) => {\n    this.setState({\n      match: [...this.state.match, card1, card2],\n      flipped: []\n    })\n  }\n\n  resetCards = () => {\n    setTimeout(() => {\n      this.setState({\n      flipped: []\n      })\n    }, 1000)  \n  }\n\n  render() {\n    const cardsInPlay = this.state.cards.map(card => {\n      if(this.state.flipped.find(flipCard => flipCard.id === card.id)) {\n        return <Card key={card.id} id={card.id} symbol={card.symbol} flipped={true} pickCard={this.pickCard}/>\n      } else if (this.state.match.find(matchCard => matchCard.id === card.id)) {\n        return <Card key={card.id} id={card.id} symbol={card.symbol} flipped={true} pickCard={this.pickCard}/>\n      } else {\n        return <Card key={card.id} id={card.id} symbol={card.symbol} flipped={false} pickCard={this.pickCard} />}\n      })\n    return(\n      <div className=\"game-container\">\n        <Header shuffle={this.shuffleDeck} count={this.state.match.length/2} clicks={this.state.clicks}/>\n        { this.state.match.length > 15 && <Winner /> }\n        <section className=\"game-board\">\n          { cardsInPlay }\n        </section>\n      </div>\n    )\n  }\n}\n\nexport default Board","import React from 'react'\nimport './App.css';\nimport Board from './components/Board'\n\nconst App = () =>{\n  return (\n    <div className=\"App\">\n      <Board />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}